---
name: Main

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "img/**"

jobs:
  build:
    uses: ./.github/workflows/reusable-build.yml
    secrets: inherit

  prepare-release:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: sfdx-git-delta
          token: ${{ secrets.RELEASE_PAT }}

  release:
    needs: prepare-release
    runs-on: ubuntu-latest
    if: needs.prepare-release.outputs.release_created == 'true'
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Setup dependencies, cache and install
        uses: ./.github/actions/install

      - name: Publish to npm
        run: yarn npm publish --access public --tag latest-rc
        env:
          YARN_NPM_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  test-release:
    needs: [prepare-release, release]
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [16, 18, 20]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          ref: 'e2e/head'
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install sfdx-cli
        run: npm install -g sfdx-cli

      - name: Install new plugin version
        run: echo y | sfdx plugins:install sfdx-git-delta@${{ needs.prepare-release.outputs.version }}

      - name: Test new plugin version
        run: sfdx sgd:source:delta --help

      - name: E2E Tests
        run: |
          yarn
          yarn test:e2e
