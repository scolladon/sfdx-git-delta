#!/usr/bin/env node
'use strict'

const program = require('commander')
const orchestrator = require('../lib/main')
const pjson = require('../package.json')

const options = program
  .description(pjson.description)
  .version(pjson.version)
  .option(
    '-t, --to [sha]',
    'commit sha to where the diff is done [HEAD]',
    'HEAD'
  )
  .option(
    '-f, --from [sha]',
    'commit sha from where the diff is done [git rev-list --max-parents=0 HEAD]'
  )
  .option(
    '-o, --output [dir]',
    'source package specific output [./output]',
    './output'
  )
  .option('-i, --ignore [file]', 'ignore file to use [./.forceignore]')
  .option(
    '-D, --ignore-destructive [file]',
    'ignore file to use [./.forceignore]'
  )
  .option(
    '-a, --api-version [version]',
    `salesforce API version [${pjson.sfdc.latestApiVersion}]`,
    pjson.sfdc.latestApiVersion
  )
  .option('-r, --repo [dir]', 'git repository location [.]', '.')
  .option('-d, --generate-delta', 'generate delta files in [./output] folder')
  .parse(process.argv)
  .opts()

options.ignore = options.ignore === true ? './.forceignore' : options.ignore

const output = {
  error: null,
  output: options.output,
  success: true,
  warnings: [],
}
try {
  const jobResult = orchestrator(options)
  output.warnings = jobResult?.warnings?.map(warning => warning.message)
} catch (err) {
  output.success = false
  output.error = err.message
  process.exitCode = 1
}
console.log(JSON.stringify(output, null, 2))
