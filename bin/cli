#!/usr/bin/env node
'use strict'

const program = require('commander')
const orchestrator = require('../lib/main')
const messages = require('../messages/delta')
const pjson = require('../package.json')
const CliHelper = require('../lib/utils/cliHelper')

const options = program
  .description(messages.command)
  .version(pjson.version)
  .option('-t, --to [sha]', messages.toFlag, CliHelper.TO_DEFAULT_VALUE)
  .option('-f, --from [sha]', messages.fromFlag)
  .option(
    '-o, --output [dir]',
    messages.outputFlag,
    CliHelper.OUTPUT_DEFAULT_VALUE
  )
  .option(
    '-s, --source [dir]',
    messages.sourceFlag,
    CliHelper.SOURCE_DEFAULT_VALUE
  )
  .option('-W, --ignore-whitespace', messages.ignoreWhitespaceFlag)
  .option('-i, --ignore [file]', messages.ignoreFlag)
  .option('-D, --ignore-destructive [file]', messages.ignoreDestructiveFlag)
  .option(
    '-a, --api-version [version]',
    messages.apiVersionFlag,
    pjson.sfdc.latestApiVersion
  )
  .option('-r, --repo [dir]', messages.repoFlag, CliHelper.REPO_DEFAULT_VALUE)
  .option('-d, --generate-delta', messages.deltaFlag)
  .option('-n, --include', messages.includeFlag)
  .option('-N, --include-destructive', messages.includeDestructiveFlag)
  .parse(process.argv)
  .opts()

options.ignore =
  options.ignore === true ? CliHelper.IGNORE_DEFAULT_VALUE : options.ignore

const output = {
  error: null,
  output: options.output,
  success: true,
  warnings: [],
}
;(async () => {
  try {
    const jobResult = await orchestrator(options)
    output.warnings = jobResult?.warnings?.map(warning => warning.message)
  } catch (err) {
    output.success = false
    output.error = err.message
    process.exitCode = 1
  }
  console.log(JSON.stringify(output, null, 2))
})()
